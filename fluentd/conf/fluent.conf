<system>
  log_level info
</system>

# Syslog Input
<source>
  @type syslog
  tag syslog.logs
  port 5514
  bind 0.0.0.0
  <transport udp>
  </transport>
  <parse>
    @type syslog
    with_priority true
    message_format rfc5424
  </parse>
</source>

# Parse Veeam structured data
<filter syslog.**>
  @type parser
  key_name message
  reserve_data true
  <parse>
    @type regexp
    expression /.*\[(?<structured_data>.*)\]/
  </parse>
</filter>

# Extract Veeam-specific fields
<filter syslog.**>
  @type record_transformer
  enable_ruby true
  <record>
    activity_type ${record.dig("structured_data") =~ /ActivityType="([^"]*)"/ ? $1 : nil}
    user_name ${record.dig("structured_data") =~ /UserName="([^"]*)"/ ? $1 : nil}
    object_name ${record.dig("structured_data") =~ /ObjectName="([^"]*)"/ ? $1 : nil}
    vbr_hostname ${record.dig("structured_data") =~ /VbrHostName="([^"]*)"/ ? $1 : nil}
    detection_time ${record.dig("structured_data") =~ /DetectionTimeUTC="([^"]*)"/ ? $1 : nil}
    oib_id ${record.dig("structured_data") =~ /OibID="([^"]*)"/ ? $1 : nil}

    # Security categorization
    threat_level ${record.dig("structured_data") =~ /ActivityType="EncryptedData"/ ? "HIGH" : "MEDIUM"}
    event_category "malware"
    event_type "detection"
    source_type "veeam"
    vendor "veeam"
  </record>
</filter>

# Add ECS (Elastic Common Schema) fields for Security integration
<filter syslog.**>
  @type record_transformer
  enable_ruby true
  <record>
    # Core ECS fields
    event.kind "alert"
    event.category "malware"
    event.type "info"
    event.outcome "unknown"
    event.dataset "veeam.security"

    # Host information
    host.name ${record["host"]}

    # User information (extract domain and username)
    user.name ${record.dig("structured_data") =~ /UserName="([^"]*)"/ ? $1&.split('\\\\')&.last : nil}
    user.domain ${record.dig("structured_data") =~ /UserName="([^"]*)"/ ? $1&.split('\\\\')&.first : nil}

    # Source information
    observer.vendor "veeam"
    observer.product "backup_replication"
    observer.type "backup"
  </record>
</filter>

# Add MITRE ATT&CK and threat intelligence
<filter syslog.**>
  @type record_transformer
  <record>
    # MITRE ATT&CK mapping for ransomware
    threat.technique.id "T1486"
    threat.technique.name "Data Encrypted for Impact"
    threat.tactic.id "TA0040"
    threat.tactic.name "Impact"

    # Rule information for Elastic Security
    rule.name "Veeam Malware Detection Alert"
    rule.description "Potential malware activity detected by Veeam Backup & Replication"
    rule.category "Malware"
    rule.ruleset "Veeam Security"
    rule.severity "high"
    rule.risk_score 75
  </record>
</filter>

# Filter for Veeam logs only (optional - removes non-Veeam noise)
<filter syslog.**>
  @type grep
  <regexp>
    key ident
    pattern /Veeam/
  </regexp>
</filter>

# Output to Elasticsearch with logstash format
<match syslog.**>
  @type elasticsearch
  host elasticsearch
  port 9200
  user elastic
  password CHANGETOPASSWORDYOUCREATED
  logstash_format true
  logstash_prefix veeam-logs
  logstash_dateformat %Y.%m.%d
  include_tag_key true
  tag_key @log_name
  <buffer>
    @type memory
    flush_mode interval
    flush_interval 10s
    chunk_limit_size 1m
  </buffer>
</match>
